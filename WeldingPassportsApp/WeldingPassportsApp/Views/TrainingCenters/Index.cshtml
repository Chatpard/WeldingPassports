@using Application.Interfaces.Repositories.SQL;
@using Microsoft.AspNetCore.DataProtection;
@using Microsoft.AspNetCore.Mvc.Localization
@using Application.Security
@inject IViewLocalizer Localizer
@inject UserManager<IdentityUser> userManager
@inject ITrainingCentersSQLRepository trainingCentersSQLRepository
@inject IDataProtectionProvider dataProtectionProvider
@inject IDataProtectionPurposeStrings dataProtectionPurposeStrings
@model PaginatedList<TrainingCenterIndexViewModel>

@{
    ViewData["Title"] = Localizer["Training Centers Index"];
    var currentUrl = ViewBag.CurrentUrl;
    var userCanReadTrainingCenters = User.CanRead(ClaimsTypesStore.TrainingCenters);
    var userCanEditTrainingCenters = User.CanEdit(ClaimsTypesStore.TrainingCenters);
    var userCanCreateTrainingCenters = User.CanCreate(ClaimsTypesStore.TrainingCenters);
    var userCanDeleteTrainingCenters = User.CanDelete(ClaimsTypesStore.TrainingCenters);

    var protector = dataProtectionProvider.CreateProtector(dataProtectionPurposeStrings.IdRouteValue);
    var userTrainingCenterID = await User.GetTrainingCenterID(userManager, trainingCentersSQLRepository, protector);
}

<h1>@Localizer["Training Centers Index"]</h1>
<hr />
@if (userCanCreateTrainingCenters)
{
    <p>
        <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Create)" asp-route-returnUrl="@currentUrl">
            @Localizer["Create New"]
        </a>
    </p>
}

<form asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)" method="get" id="SearchForm">
    <div class="form-actions no-color">
        <p>
            <label for="SearchInput">@Localizer["Find Training Center:"]</label>
            <input type="search" name="SearchString" value="@ViewData["CurrentFilter"]" id="SearchInput" />
            <input type="submit" value=@Localizer["Search"] class="btn btn-light" /> |
            <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)">
                @Localizer["Back to Full List"]
            </a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["Letter"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().Letter)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Letter_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Letter_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["CompanyName"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().CompanyName)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "CompanyName_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "CompanyName_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["BusinessAddressPostalCode"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().BusinessAddressPostalCode)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "BusinessAddressPostalCode_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "BusinessAddressPostalCode_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["BusinessAddressCity"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().BusinessAddressCity)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "BusinessAddressCity_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "BusinessAddressCity_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["Contact"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().Contact)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Contact_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Contact_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["Email"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().Email)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Email_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "Email_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th>
                <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
                   asp-route-sortOrder="@ViewData["MobilePhone"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(t => t.FirstOrDefault().MobilePhone)
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "MobilePhone_desc")
                    {
                        @Html.Raw(" ▲")
                    }
                    @if (Convert.ToString(ViewData["CurrentSort"]) == "MobilePhone_asc")
                    {
                        @Html.Raw(" ▼")
                    }
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var trainingCenter in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(vm => trainingCenter.Letter)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.BusinessAddressPostalCode)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.BusinessAddressCity)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.Contact)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.Email)
            </td>
            <td>
                @Html.DisplayFor(vm => trainingCenter.MobilePhone)
            </td>
            <td>
                @if (userCanReadTrainingCenters)
                {
                    <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Details)"
                        asp-route-id="@trainingCenter.EncryptedId" asp-route-returnUrl="@currentUrl">@Localizer["Details"]</a>
                }
                @if (userCanEditTrainingCenters && (userTrainingCenterID == null || userTrainingCenterID == protector.Unprotect(trainingCenter.EncryptedId)))
                {
                    <text>|</text> <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Edit)"
                        asp-route-id="@trainingCenter.EncryptedId" asp-route-returnUrl="@currentUrl">@Localizer["Edit"]</a>
                }
                @if (userCanDeleteTrainingCenters)
                {
                    <text>|</text> <a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Delete)"
                        asp-route-id="@trainingCenter.EncryptedId" asp-route-returnUrl="@currentUrl">@Localizer["Delete"]</a>
                }
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @prevDisabled">
    @Localizer["Previous"]
</a>
<a asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Index)"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @nextDisabled">
    @Localizer["Next"]
</a>

@section Scripts {
    <script src="~/js/SearchInputClick.js"></script>
}