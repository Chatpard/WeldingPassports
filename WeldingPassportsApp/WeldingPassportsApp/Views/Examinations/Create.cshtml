@model Application.ViewModels.ExaminationCreateViewModel

@{
    ViewData["Title"] = @Localizer["Create Examination"];
    var returnUrl = ViewBag.ReturnUrl;
    var currentUrl = ViewBag.CurrentUrl;
    var userCanCreateExamCenters = User.CanCreate(ClaimsTypesStore.ExamCenters);
    var userCanCreateTrainingCenters = User.CanCreate(ClaimsTypesStore.TrainingCenters);
}

<h1>@Localizer["Create Examination"]</h1>
<hr />
<form asp-action="@nameof(ExaminationsController.Create)" asp-controller="@typeof(ExaminationsController).GetNameOfController()"
      asp-route-returnUrl="@returnUrl" method="post">
    <div class="form-group row mb-3">
        <label asp-for="ExamDate" class="col-sm-2 col-form-label" value=""></label>
        <div class="col-sm-10 align-self-center">
            <input asp-for="ExamDate" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
        </div>
        <span asp-validation-for="ExamDate" class="text-danger"></span>
    </div>
    <div class="form-group row mb-3">
        <label asp-for="ExamCenterID" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10 align-self-center">
            <div class="input-group">
                <select asp-for="ExamCenterID" class="form-control" asp-items="Model.ExamCenterItems">
                    <option value="" selected disabled hidden>@Localizer["Choose Exam Center"]</option>
                </select>
                @if (userCanCreateExamCenters)
                {
                    <a id="ExamCenterSelect" asp-controller="@typeof(ExaminationsController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Create)" asp-route-returnUrl="@currentUrl" class="btn btn-primary" type="button">@Localizer["Create"]</a>
                }
                <input class="btn btn-primary" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#ExamCenterID'))"/>
            </div>
            <span asp-validation-for="ExamCenterID" class="text-danger"></span>
        </div>
    </div> 
    <div class="form-group row mb-3">
        <label asp-for="TrainingCenterID" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10 align-self-center">
            <div class="input-group">
                <select asp-for="TrainingCenterID" class="form-control" asp-items="Model.TrainingCenterItems">
                    <option value="" selected disabled hidden>@Localizer["Choose Training Center"]</option>
                </select>
                @if (userCanCreateTrainingCenters)
                {
                    <a id="TrainingCenterSelect" asp-controller="@typeof(TrainingCentersController).GetNameOfController()" asp-action="@nameof(TrainingCentersController.Create)" asp-route-returnUrl="@currentUrl" class="btn btn-primary" type="button">@Localizer["Create"]</a>
                }
                <input class="btn btn-primary" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#TrainingCenterID'))" />
            </div>
            <span asp-validation-for="TrainingCenterID" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <div class="col-sm-12">
            <button type="submit" class="btn btn-primary" style="width:auto">@Localizer["Save"]</button>
            <a href="@returnUrl" class="btn btn-primary" style="width:auto">@Localizer["Cancel"]</a>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/OnClickClear.js"></script>
    <script src="~/js/SetExamCenterSelectSingle.js"></script>
    <script src="~/js/SetTrainingCenterSelectSingle.js"></script>
}