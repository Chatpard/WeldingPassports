@using WeldingPassportsApp.Stores;
@model ExamCenterEditViewModel

@{
    ViewData["Title"] = Localizer["Exam Centers Edit"];
    string returnUrl = ViewBag.ReturnUrl;
    string currentUrl = ViewBag.CurrentUrl;

    bool userCanEditCompanies = User.CanEdit(ClaimsTypesStore.Companies);
    bool userCanCreateCompanies = User.CanCreate(ClaimsTypesStore.Companies);
    bool userCanCreateCompanyContacts = User.CanCreate(ClaimsTypesStore.CompanyContacts);

    if (TempData.ContainsKey(nameof(ExamCenterEditViewModel.CompanyID)))
        Model.CompanyID = (int) TempData[nameof(ExamCenterEditViewModel.CompanyID)];
}

<h1>@Localizer["Edit Exam Centers"]</h1>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-controller="@typeof(ExamCentersController).GetNameOfController()" asp-action="@nameof(ExamCentersController.Edit)" asp-route-returnUrl="@returnUrl" asp-route-currentUrl="@currentUrl" method="post">
            <input asp-for="@Model.EncryptedID" title="@nameof(Model.EncryptedID)" placeholder="@nameof(Model.EncryptedID)" hidden />
            <div class="form-group row">
                <label asp-for="@Model.CompanyID" class="col-sm-2 col-form-label"></label>
                <div class="input-group col-sm-10 align-self-center">
                    <select asp-for="@Model.CompanyID" class="form-control align-self-center" asp-items="@Model.CompanySelectList" onchange="OnChangeCompanyID()">
                        <option value="" selected disabled hidden>@Localizer["Choose a company"]</option>
                    </select>
                    @if(userCanEditCompanies || userCanCreateCompanies)
                    {
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false" onclick="ActionDisableEdit('@ExamCenterIDStore.GetCompanyEditBtnID')">
                                @Localizer["Action"]
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                @if (userCanEditCompanies)
                                {
                                    <button class="dropdown-item" type="submit" name="submit" value="@ExamCenterIDStore.GetCompanyEditBtnID" id="@ExamCenterIDStore.GetCompanyEditBtnID" style="width:auto">@Localizer["Edit"]</button>
                                }
                                @if (userCanCreateCompanies)
                                {
                                    <a class="dropdown-item" asp-controller="@typeof(CompaniesController).GetNameOfController()" asp-action="@nameof(CompaniesController.Create)" asp-route-returnUrl="@currentUrl">@Localizer["Create"]</a>
                                }
                            </div> 
                        </div>
                    }
                    <div class="input-group-append">
                        <input type="button" class="btn btn-primary" value="@Localizer["Clear"]" onclick="OnClickClear($('#CompanyID'))" />
                    </div>
                </div>
                <span asp-validation-for="CompanyID" class="col-sm-12 text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="CompanyContactID" class="col-sm-2 col-form-label"></label>
                <div class="input-group col-sm-10">
                    <select asp-for="CompanyContactID" class="form-control" asp-items="@Model.CompanyContactSelectList">
                        @if (Model.CompanyContactSelectList.Count() == 0)
                        {
                            <option value="" selected disabled>@Localizer["No contacts"]</option>
                        }
                        else
                        {
                            <option value="" selected disabled hidden>@Localizer["Choose a contact"]</option>
                        }
                    </select>
                    @if (userCanCreateCompanyContacts)
                    {
                        <div class="input-group-append">
                            <a class="btn btn-primary" id="CompanyContactIDCreateButton" type="button" asp-controller="@typeof(CompanyContactsController).GetNameOfController()" asp-action="@nameof(CompanyContactsController.Create)" asp-route-returnUrl="@currentUrl">Create</a>
                        </div>
                    }
                    <div class="input-group-append">
                        <input class="btn btn-primary" id="CompanyContactIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#CompanyContactID'))" />
                    </div>
                </div>
                <span asp-validation-for="CompanyContactID" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="@Model.IsActive" class="col-sm-2 col-form-label"></label>
                <div class="input-group col-sm-10">
                    <input asp-for="@Model.IsActive" class="form-check-input" style="margin-left: 0" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-12">
                    <button type="submit" class="btn btn-primary" style="width:auto">@Localizer["Save"]</button>
                    <a href="@returnUrl" class="btn btn-primary" style="width:auto">@Localizer["Cancel"]</a>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/ActionBtn.js"></script>
    <script src="~/js/OnClickClear.js"></script>
    <script type="module" src="~/js/ExamCenter/OnChangeCompanyID.js"></script>
}