@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IAuthorizationService Authorization
@model CertificateEditViewModel

@{
    ViewData["Title"] = Localizer["Edit Certificate"];
    var returnUrl = ViewBag.ReturnUrl;
    var userCanUpdateCertificates = User.CanUpdate(ClaimsTypesStore.Certificates);
    var userCanEditCertificates = User.CanEdit(ClaimsTypesStore.Certificates);
    var userCanRevokeCertificates = User.CanRevoke(ClaimsTypesStore.Certificates);

    var NotSet = Localizer["Not Set"].Value;
    var Failed = Localizer["Failed"].Value;
    var Success = Localizer["Success"].Value;

    bool EnableProcessID = !Model.HasNext && Model.CompanyID != 0;
    bool EnableRegistrationTypeID = EnableProcessID && Model.ProcessID != 0;
    bool EnableExpiryDate = EnableRegistrationTypeID && Model.RegistrationTypeID != 0;
    bool EnableHasPassed = EnableExpiryDate && Model.ExpiryDate.HasValue;
    bool EnableRevokeByCompanyContactID = EnableHasPassed && Model.HasPassed.HasValue;
    bool EnableRevokeDate = EnableRevokeByCompanyContactID && Model.RevokedByCompanyContactID.HasValue;
    bool EnableRevokeComment = EnableRevokeByCompanyContactID && Model.RevokedByCompanyContactID.HasValue;
}

<div>
    <h1 class="d-inline">@Localizer["Edit Certificate"]</h1>
    <a class="collapseArrow" data-bs-toggle="collapse" href="#collapseEditCertificate" role="button" aria-expanded="false" aria-controls="collapseEditCertificate">
        ▼
    </a>
</div>
<hr />
<form enctype="multipart/form-data" asp-controller="@typeof(CertificatesController).GetNameOfController()"
      asp-action="@nameof(CertificatesController.Edit)" asp-route-returnUrl="@returnUrl" method="post" class="mt-3" onsubmit="PrepareFormOnsubmit()">
    <div class="collapse" id="collapseEditCertificate">
        <input hidden asp-for="EncryptedID" />
        <div class="form-group row mb-3">
            <label asp-for="ExamDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="ExamDate" class="form-control" placeholder="Examination Date" readonly>
                <span asp-validation-for="ExamDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="ExamCenterName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="ExamCenterName" class="form-control" readonly>
                <span asp-validation-for="ExamCenterName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="TrainingCenterName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="TrainingCenterName" class="form-control" readonly>
                <span asp-validation-for="TrainingCenterName" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div>
        <h2 class="d-inline">@Localizer["Current Certificate"]</h2>
        <a class="collapseArrow" data-bs-toggle="collapse" href="#collapseCurrentCertificate" role="button" aria-expanded="true" aria-controls="collapseCurrentCertificate">
            ▲
        </a>
    </div>
    <hr />
    <div class="collapse show" id="collapseCurrentCertificate">
        <div class="form-group row mb-3">
            <input hidden asp-for="PEPassportID" />
            <label asp-for="AVNumber" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    <span id="Letter" class="input-group-text">@Model.Letter</span>
                    <input asp-for="AVNumber" asp-format="{0:D5}" class="form-control" placeholder="AV number" readonly>
                </div>
                <span asp-validation-for="AVNumber" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="FirstName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="FirstName" class="form-control" placeholder="First Name" readonly>
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="LastName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="LastName" class="form-control" placeholder="Last Name" readonly>
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="CompanyID" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @if (userCanEditCertificates)
                    {
                        <select asp-for="CompanyID" class="form-control" asp-items="Model.CompanyNameItems">
                            @if (Model.CompanyNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Company"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Company"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="CurrentCertificateCompanyIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#CompanyID'))" />
                    }
                    else
                    {
                        <select asp-for="CompanyID" class="form-control" asp-items="Model.CompanyNameItems" disabled="disabled">
                            @if (Model.CompanyNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Company"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Company"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="CurrentCertificateCompanyIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#CompanyID'))" disabled="disabled" />
                    }
                </div>
                <span asp-validation-for="CompanyID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="ProcessID" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @if (userCanEditCertificates && EnableProcessID && Model.RegistrationTypeID == 0)
                    {
                        <select asp-for="ProcessID" class="form-control" asp-items="Model.ProcessNameItems" onchange="OnChangeProcessID()">
                            @if (Model.ProcessNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Process"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Process"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="ProcessIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#ProcessID'))" />
                    }
                    else
                    {
                        <select asp-for="ProcessID" class="form-control" asp-items="Model.ProcessNameItems" onchange="OnChangeProcessID()" disabled="disabled">
                            @if (Model.ProcessNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Process"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Process"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="ProcessIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#ProcessID'))" disabled="disabled" />
                    }
                </div>
                <span asp-validation-for="ProcessID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="RegistrationTypeID" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @if (userCanEditCertificates && EnableRegistrationTypeID && !Model.ExpiryDate.HasValue)
                    {
                        <select asp-for="RegistrationTypeID" class="form-control" asp-items="Model.RegistrationTypeNameItems" onchange="OnChangeRegistrationTypeID()">
                            @if (Model.RegistrationTypeNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Registration Type"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Registration Type"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="RegistrationTypeIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#RegistrationTypeID'))" />
                    }
                    else
                    {
                        <select asp-for="RegistrationTypeID" class="form-control" asp-items="Model.RegistrationTypeNameItems" onchange="OnChangeRegistrationTypeID()" disabled="disabled">
                            @if (Model.RegistrationTypeNameItems.Any())
                            {
                                <option value="" selected disabled hidden>@Localizer["Choose Registration Type"]</option>
                            }
                            else
                            {
                                <option value="" selected disabled>@Localizer["Choose Registration Type"]</option>
                            }
                        </select>
                        <input class="btn btn-primary" id="RegistrationTypeIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#RegistrationTypeID'))" disabled="disabled" />
                    }
                </div>
                <span asp-validation-for="RegistrationTypeID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="ExpiryDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @if(userCanUpdateCertificates && EnableExpiryDate && Model.HasPassed == null){
                        <input asp-for="ExpiryDate" class="form-control" placeholder="Expiry Date" onchange="OnChangeExpiryDate(@($"{(userCanEditCertificates?"true":"false")}"))" min="@Model.ExamDate?.ToString("yyyy-MM-dd")" max="@Model.MaxExpiryDate?.ToString("yyyy-MM-dd")">
                        <input class="btn btn-primary" id="ExpiryDateClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#ExpiryDate'))" />
                    }
                    else
                    {
                        <input asp-for="ExpiryDate" class="form-control" placeholder="Expiry Date" onchange="OnChangeExpiryDate(@($"{(userCanEditCertificates?"true":"false")}"))" min="@Model.ExamDate?.ToString("yyyy-MM-dd")" max="@Model.MaxExpiryDate?.ToString("yyyy-MM-dd")" readonly>
                        <input class="btn btn-primary" id="ExpiryDateClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#ExpiryDate'))" disabled />
                    }
                </div>
                <span asp-validation-for="ExpiryDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label asp-for="HasPassed" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @if (userCanUpdateCertificates && EnableHasPassed && Model.RevokedByCompanyContactID == null)
                    {
                        @Html.DropDownListFor(m => m.HasPassed, new SelectList(new[]
                        {
                            new SelectListItem { Value = null, Text = NotSet },
                            new SelectListItem { Value = "False", Text = Failed },
                            new SelectListItem { Value = "True", Text = Success }
                        },
                        "Value",
                        "Text"
                        ),
                        new { 
                            @class = "form-control",
                            @onchange = $"OnChangeHasPassedID({(userCanEditCertificates?"true":"false")})"
                        })
                        <input class="btn btn-primary" id="HasPassedClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#HasPassed'))" />
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.HasPassed, new SelectList(new[]
                        {
                            new SelectListItem { Value = null, Text = NotSet },
                            new SelectListItem { Value = "False", Text = Failed },
                            new SelectListItem { Value = "True", Text = Success }
                        },
                        "Value",
                        "Text"
                        ),
                        new {
                            @class = "form-control",
                            @onchange = $"OnChangeHasPassedID({(userCanEditCertificates?"true":"false")})",
                            @disabled =  "disabled" 
                        })
                        <input class="btn btn-primary" id="HasPassedClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#HasPassed'))" disabled="disabled" />
                    }
                </div>
                <span asp-validation-for="HasPassed" class="text-danger"></span>
            </div>
        </div>

        <div id="Revoke" style=@((Model.HasPassed == true && (EnableRevokeByCompanyContactID || Model.RevokedByCompanyContactID != null)) ? "":"display:none;")>
            <div class="form-group row mb-3">
                <label asp-for="RevokedByCompanyContactID" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="input-group">
                        @if (userCanRevokeCertificates && EnableRevokeByCompanyContactID)
                        {
                            <select asp-for="RevokedByCompanyContactID" class="form-control" asp-items="Model.CompanyContactNameItems" onchange="OnChangeRevokedBy()">
                                <option value="" selected disabled hidden>Not Revoked</option>
                            </select>
                            <input class="btn btn-primary" id="RevokedByCompanyContactIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#RevokedByCompanyContactID'))" />
                        }
                        else
                        {
                            <select asp-for="RevokedByCompanyContactID" class="form-control" asp-items="Model.CompanyContactNameItems" onchange="OnChangeRevokedBy()" disabled>
                                <option value="" selected disabled hidden>Not Revoked</option>
                            </select>
                            <input class="btn btn-primary" id="RevokedByCompanyContactIDClearButton" type="button" value="@Localizer["Clear"]" onclick="OnClickClear($('#RevokedByCompanyContactID'))" disabled />
                        }
                    </div>
                    <span asp-validation-for="RevokedByCompanyContactID" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row mb-3">
                <label asp-for="RevokeDate" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    @if (userCanRevokeCertificates && EnableRevokeDate)
                    {
                        <input asp-for="RevokeDate" class="form-control" data-val="true" data-val-required=@Localizer["Revoke Date needs to between "]@Model.ExamDate?.ToString("dd-MM-yyyy")@Localizer[" and "]@Model.MaxExpiryDate?.ToString("dd-MM-yyyy") min="@Model.ExamDate?.ToString("yyyy-MM-dd")" max="@Model.MaxExpiryDate?.ToString("yyyy-MM-dd")">
                    }
                    else
                    {
                        <input asp-for="RevokeDate" class="form-control" data-val="false" data-val-required=@Localizer["Revoke Date needs to between "]@Model.ExamDate?.ToString("dd-MM-yyyy")@Localizer[" and "]@Model.MaxExpiryDate?.ToString("dd-MM-yyyy") min="@Model.ExamDate?.ToString("yyyy-MM-dd")" max="@Model.MaxExpiryDate?.ToString("yyyy-MM-dd")" readonly>
                    }
                    <span asp-validation-for="RevokeDate" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row mb-3">
                <label asp-for="RevokeComment" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    @if (userCanRevokeCertificates && EnableRevokeComment)
                    {
                        <input asp-for="RevokeComment" class="form-control" placeholder="Revoke Comment" data-val="true" data-val-required=@Localizer["A Revoke Comment is required"]>
                    }
                    else
                    {
                        <input asp-for="RevokeComment" class="form-control" placeholder="Revoke Comment" data-val="false" data-val-required=@Localizer["A Revoke Comment is required"] disabled>
                    }
                    <span asp-validation-for="RevokeComment" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    @if (Model.PreviousCertificateExpiryDate != null)
    {
        <div>
            <h2 class="d-inline">@Localizer["Previous Certificate"]
            </h2>
            <a class="collapseArrow" data-bs-toggle="collapse" href="#collapsePreviousCertificate" role="button" aria-expanded="false" aria-controls="collapsePreviousCertificate">
                ▼
            </a>
        </div>
        <hr />
        <div class="collapse" id="collapsePreviousCertificate">
            <div class="form-group row mb-3">
                <label asp-for="PreviousCertificateExpiryDate" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="PreviousCertificateExpiryDate" class="form-control" readonly>
                    <span asp-validation-for="PreviousCertificateExpiryDate" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row mb-3">
                <label asp-for="PreviousCertificateHasPassed" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    @if (Model.PreviousCertificateHasPassed == null)
                    {
                        <input value="Not Set" class="form-control" readonly>
                    }
                    @if (Model.PreviousCertificateHasPassed == false)
                    {
                        <input value="Not Passed" class="form-control" readonly>
                    }
                    @if (Model.PreviousCertificateHasPassed == true)
                    {
                        <input value="Passed" class="form-control" readonly>
                    }
                    <span asp-validation-for="PreviousCertificateHasPassed" class="text-danger"></span>
                </div>
            </div>
            @if (Model.PreviousCertificateRevokeDate != null)
            {
                <div class="form-group row mb-3">
                    <label asp-for="PreviousCertificateRevokeDate" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <input asp-for="PreviousCertificateRevokeDate" class="form-control" readonly>
                        <span asp-validation-for="PreviousCertificateRevokeDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label asp-for="PreviousCertificateRevokedBy" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <input asp-for="PreviousCertificateRevokedBy" class="form-control" readonly>
                        <span asp-validation-for="PreviousCertificateRevokedBy" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label asp-for="PreviousCertificateRevokeComment" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <input asp-for="PreviousCertificateRevokeComment" class="form-control" placeholder="Revoke Comment" readonly>
                        <span asp-validation-for="PreviousCertificateRevokeComment" class="text-danger"></span>
                    </div>
                </div>
            }
        </div>
    }
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary" style="width:auto">@Localizer["Save"]</button>
            <a href="@returnUrl" class="btn btn-primary" style="width:auto">@Localizer["Cancel"]</a>
        </div>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
</form>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/js/Certificates/PrepareFormOnsubmit.js"></script>
    <script src="~/js/ToggleCollapseArrow.js"></script>
    <script src="~/js/OnClickClear.js"></script>
    <script type="module" src="~/js/Certificates/OnChangeProcessID.js"></script>
    <script type="module" src="~/js/Certificates/OnChangeRegistrationTypeID.js"></script>
    <script type="module" src="~/js/Certificates/OnChangeHasPassedID.js"></script>
    <script type="module" src="~/js/Certificates/OnChangeExpiryDate.js"></script>
    <script type="module" src="~/js/Certificates/OnChangeRevokedBy.js"></script>
}