@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model ExaminationUpdateViewModel

@{
    ViewData["Title"] = Localizer["Examination Update"];
    var returnUrl = ViewBag.ReturnUrl;
    var currentUrl = ViewBag.CurrentUrl;
}

<h1>@Localizer["Examination Update"]</h1>
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExamDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExamDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExamCenterName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExamCenterName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TrainingCenterName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TrainingCenterName)
        </dd>
    </dl>
</div>
<br />
<h2>@Localizer["PE Certificates"]</h2>
<form enctype="multipart/form-data" asp-controller="@typeof(ExaminationsController).GetNameOfController()" 
    asp-action="@nameof(ExaminationsController.Update)" asp-route-returnUrl="@returnUrl" method="post">
    <div class="form-group row">
        <table class="table">
            <thead>
                <tr>
                    <th style="display: none">
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().EncryptedID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().AVNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().ProcessName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().RegistrationTypeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().HasPassed)
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Certifications.Count(); i++)
                {
                    <tr class="@Model.Certifications[i].Color">
                        <td style="display: none">
                            @Html.EditorFor(modelItem => Model.Certifications[i].EncryptedID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Certifications[i].Letter)
                            @Html.DisplayFor(modelItem => Model.Certifications[i].AVNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Certifications[i].FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Certifications[i].LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Certifications[i].ProcessName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Certifications[i].RegistrationTypeName)
                        </td>
                        <td>
                            @Html.DropDownListFor(m => Model.Certifications[i].HasPassed, new SelectList(new[]
                        {
                        new SelectListItem { Value = null, Text = "Not set" },
                        new SelectListItem { Value = "False", Text = "False" },
                        new SelectListItem { Value = "True", Text = "True" },
                        },
                        "Value",
                        "Text"
                        ),
                        new { @class = "form-control" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary" style="width:auto">@Localizer["Save"]</button>
            <a href="@returnUrl" class="btn btn-primary" style="width:auto">@Localizer["Cancel"]</a>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
    </div>
</form>

