@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model PEPassportDetailsViewModel

@{
    ViewData["Title"] = Localizer["PE Passport Details"];
    var returnUrl = ViewBag.ReturnUrl;
    var currentUrl = ViewBag.CurrentUrl;
    bool userCanEditPEPassports = User.CanEdit(ClaimsTypesStore.PEPassports);
    bool userCanReadCertificates = User.CanRead(ClaimsTypesStore.Certificates);
    bool userCanEditCertificates = User.CanEdit(ClaimsTypesStore.Certificates); 
    bool userCanUpdateCertificates = User.CanUpdate(ClaimsTypesStore.Certificates);
    bool userCanDeleteCertificates = User.CanDelete(ClaimsTypesStore.Certificates);
}

<h1>@Localizer["PE Passport Details"]</h1>
<hr />
<dl class="row">
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.AVNumber)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Letter)
        @Html.DisplayFor(model => model.AVNumber)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.FirstName)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.FirstName)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.LastName)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.LastName)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.NationalNumber)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.NationalNumber)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.IdNumber)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.IdNumber)
    </dd>
</dl>
<div>
    @if (userCanEditPEPassports)
    {
        <a asp-controller="@typeof(PEPassportsController).GetNameOfController()" asp-action="@nameof(PEPassportsController.Edit)"
           asp-route-id="@Model.EncryptedID" asp-route-returnUrl="@currentUrl" class="btn btn-primary" style="width:auto">@Localizer["Edit"]</a>
    }
    <a class="btn btn-primary" style="width:auto" href="@returnUrl">
        @Localizer["Back"]
    </a>
</div>
<br />
<h2>@Localizer["PE Certificates"]</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().ExpiryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().ExamDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().ProcessName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().RegistrationTypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Certifications.FirstOrDefault().HasPassed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var certification in Model.Certifications)
        {
            <tr class="@certification.Color">
                <td>
                    @Html.DisplayFor(modelItem => certification.ExpiryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => certification.ExamDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => certification.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => certification.ProcessName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => certification.RegistrationTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => certification.HasPassed)
                </td>
                <td>
                    @if (userCanReadCertificates)
                    {
                        <a asp-controller="@typeof(CertificatesController).GetNameOfController()" asp-action="@nameof(CertificatesController.Details)"
                        asp-route-id="@certification.EncryptedID" asp-route-returnUrl="@currentUrl">@Localizer["Details"]</a>
                    }
                    @if (userCanEditCertificates)
                    {
                        <text>|</text> <a asp-controller="@typeof(CertificatesController).GetNameOfController()" asp-action="@nameof(CertificatesController.Edit)"
                                  asp-route-id="@certification.EncryptedID" asp-route-returnUrl="@currentUrl">@Localizer["Edit"]</a>
                    }
                    @if (userCanDeleteCertificates && !certification.IsRevoked && !certification.HasNext)
                    {
                        <text>|</text> <a asp-controller="@typeof(CertificatesController).GetNameOfController()" asp-action="@nameof(CertificatesController.Delete)" asp-route-id="@certification.EncryptedID" asp-route-returnUrl="@currentUrl">@Localizer["Delete"]</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    @if(userCanUpdateCertificates && Model.Certifications.Count() != 0)
    {
        <a asp-controller="@typeof(PEPassportsController).GetNameOfController()" asp-action="@nameof(PEPassportsController.Update)"
            asp-route-id="@Model.EncryptedID" asp-route-returnUrl="@currentUrl" class="btn btn-primary" style="width:auto">@Localizer["Update"]</a>
    }
    <a class="btn btn-primary" style="width:auto" href="@returnUrl">
        @Localizer["Back"]
    </a>
</div>